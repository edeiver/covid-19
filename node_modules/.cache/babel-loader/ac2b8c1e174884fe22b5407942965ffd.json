{"ast":null,"code":"var _jsxFileName = \"/Users/EdeiverB/Documents/Proyectos/React/covid-19/src/components/charts/Chart.js\";\nimport React, { useEffect, useState } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Charts = props => {\n  const {\n    data,\n    country\n  } = props;\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n      setDailyData(initialDailyData);\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Infected',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  }) : null;\n  const barChart = data.confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(15, 197, 15, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        data: [data.confirmed.value, data.recovered.value, data.deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Charts;","map":{"version":3,"sources":["/Users/EdeiverB/Documents/Proyectos/React/covid-19/src/components/charts/Chart.js"],"names":["React","useEffect","useState","fetchDailyData","Line","Bar","styles","Charts","props","data","country","dailyData","setDailyData","fetchAPI","initialDailyData","lineChart","length","labels","map","date","datasets","confirmed","label","borderColor","fill","deaths","backgroundColor","barChart","value","recovered","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,KAA1B;AACA,QAAM,CAAEG,SAAF,EAAaC,YAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,QAAQ,GAAG,YAAY;AACzB,YAAMC,gBAAgB,GAAG,MAAMX,cAAc,EAA7C;AACAS,MAAAA,YAAY,CAACE,gBAAD,CAAZ;AAEH,KAJD;;AAKAD,IAAAA,QAAQ;AACX,GAPQ,EAON,EAPM,CAAT;AASA,QAAME,SAAS,GACXJ,SAAS,CAACK,MAAV,gBACC,oBAAC,IAAD;AACG,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAEN,SAAS,CAACO,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADN;AAEFC,MAAAA,QAAQ,EAAE,CAAC;AACPX,QAAAA,IAAI,EAAEE,SAAS,CAACO,GAAV,CAAc,CAAC;AAAEG,UAAAA;AAAF,SAAD,KAAmBA,SAAjC,CADC;AAEPC,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAE,SAHN;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAKP;AACCf,QAAAA,IAAI,EAAEE,SAAS,CAACO,GAAV,CAAc,CAAC;AAAEO,UAAAA;AAAF,SAAD,KAAgBA,MAA9B,CADP;AAECH,QAAAA,KAAK,EAAE,UAFR;AAGCC,QAAAA,WAAW,EAAE,KAHd;AAICG,QAAAA,eAAe,EAAE,sBAJlB;AAKCF,QAAAA,IAAI,EAAE;AALP,OALO;AAFR,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAiBM,IAlBV;AAqBA,QAAMG,QAAQ,GACVlB,IAAI,CAACY,SAAL,gBACI,oBAAC,GAAD;AACI,IAAA,IAAI,EAAE;AACFJ,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADN;AAEFG,MAAAA,QAAQ,EAAC,CAAC;AACNE,QAAAA,KAAK,EAAE,QADD;AAENI,QAAAA,eAAe,EAAE,CAAC,sBAAD,EAAyB,wBAAzB,EAAmD,sBAAnD,CAFX;AAGNjB,QAAAA,IAAI,EAAE,CAACA,IAAI,CAACY,SAAL,CAAeO,KAAhB,EAAuBnB,IAAI,CAACoB,SAAL,CAAeD,KAAtC,EAA6CnB,IAAI,CAACgB,MAAL,CAAYG,KAAzD;AAHA,OAAD;AAFP,KADV;AASI,IAAA,OAAO,EAAE;AACLE,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADH;AAELC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAE,IAAX;AAAiBE,QAAAA,IAAI,EAAG,oBAAmBvB,OAAQ;AAAnD;AAFF,KATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAgBI,IAjBR;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAEJ,MAAM,CAAC4B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKxB,OAAO,GAAGiB,QAAH,GAAcZ,SAD1B,CADJ;AAKH,CA3DD;;AA4DA,eAAeR,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchDailyData } from '../../api'\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Charts = (props) => {\n    const { data, country } = props;\n    const [ dailyData, setDailyData ] = useState({});\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            const initialDailyData = await fetchDailyData();\n            setDailyData(initialDailyData);\n\n        }\n        fetchAPI();\n    }, [])\n\n    const lineChart = (\n        dailyData.length ?\n        (<Line\n            data={{\n                labels: dailyData.map(({ date }) => date),\n                datasets: [{\n                    data: dailyData.map(({ confirmed }) => confirmed),\n                    label: 'Infected',\n                    borderColor: '#3333ff',\n                    fill: true\n                }, {\n                    data: dailyData.map(({ deaths }) => deaths),\n                    label: 'Infected',\n                    borderColor: 'red',\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                    fill: true\n                }]\n            }}\n        />) : null\n    )\n\n    const barChart = (\n        data.confirmed ? (\n            <Bar\n                data={{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets:[{\n                        label: 'People',\n                        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(15, 197, 15, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n                        data: [data.confirmed.value, data.recovered.value, data.deaths.value]\n                    }]\n                }}\n                options={{\n                    legend: { display: false },\n                    title: { display: true, text: `Current state in ${country}` },\n\n                }}\n            />\n        ) : null\n    )\n\n    return(\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    );\n}\nexport default Charts;"]},"metadata":{},"sourceType":"module"}