{"ast":null,"code":"var _jsxFileName = \"/Users/EdeiverB/Documents/Proyectos/React/covid-19/src/components/countryPicker/CountryPicker.js\";\nimport React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = props => {\n  const {\n    handleCountryChange,\n    setReload\n  } = props;\n  const [fetchedCountries, setFechedCountries] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFechedCountries((await fetchCountries()));\n    };\n\n    fetchAPI();\n  }, [setFechedCountries]);\n  return /*#__PURE__*/React.createElement(FormControl, {\n    className: styles.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NativeSelect, {\n    defaultValue: \"\",\n    onChange: e => {\n      setReload(true);\n      handleCountryChange(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"Global\"), fetchedCountries.map((country, i) => /*#__PURE__*/React.createElement(\"option\", {\n    key: i,\n    value: country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 55\n    }\n  }, country))));\n};\n\nexport default CountryPicker;","map":{"version":3,"sources":["/Users/EdeiverB/Documents/Proyectos/React/covid-19/src/components/countryPicker/CountryPicker.js"],"names":["React","useState","useEffect","NativeSelect","FormControl","styles","fetchCountries","CountryPicker","props","handleCountryChange","setReload","fetchedCountries","setFechedCountries","fetchAPI","formControl","e","target","value","map","country","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,mBAA1C;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,cAAT,QAA+B,WAA/B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,QAAK;AAAEC,IAAAA,mBAAF;AAAuBC,IAAAA;AAAvB,MAAqCF,KAA1C;AACA,QAAM,CAAEG,gBAAF,EAAoBC,kBAApB,IAA2CX,QAAQ,CAAC,EAAD,CAAzD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,QAAQ,GAAG,YAAY;AACzBD,MAAAA,kBAAkB,EAAC,MAAMN,cAAc,EAArB,EAAlB;AACH,KAFD;;AAGAO,IAAAA,QAAQ;AACX,GALQ,EAKN,CAACD,kBAAD,CALM,CAAT;AAOA,sBACI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEP,MAAM,CAACS,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,YAAY,EAAC,EAA3B;AAA8B,IAAA,QAAQ,EAAGC,CAAD,IAAO;AAC3CL,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAD,MAAAA,mBAAmB,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnB;AACH,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAKMN,gBAAgB,CAACO,GAAjB,CAAqB,CAACC,OAAD,EAAUC,CAAV,kBAAe;AAAQ,IAAA,GAAG,EAAGA,CAAd;AAAiB,IAAA,KAAK,EAAED,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCA,OAAlC,CAApC,CALN,CADJ,CADJ;AAWH,CArBD;;AAsBA,eAAeZ,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = (props) => {\n    const{ handleCountryChange, setReload } = props; \n    const [ fetchedCountries, setFechedCountries ] = useState([]);\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFechedCountries(await fetchCountries());\n        }\n        fetchAPI();\n    }, [setFechedCountries])\n\n    return(\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue='' onChange={(e) => {\n                setReload(true);\n                handleCountryChange(e.target.value);\n            } }>\n                <option value=\"\">Global</option>\n                { fetchedCountries.map((country, i)=> <option key= {i} value={country}>{country}</option> )}\n            </NativeSelect>\n        </FormControl>\n    );\n}\nexport default CountryPicker;"]},"metadata":{},"sourceType":"module"}